name: Flutter Workflow

on: push
jobs:
  build-linux:
    name: Build Flutter Linux Android App
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        env:
          TEST: ${{ secrets.TEST }}
        run: |
          echo "$TEST" > .env
        
      - run: cat .env
      - run: ls
  
  
  #     - name: Clone repository
  #       uses: actions/checkout@v4

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable # or: beta, master (or main)
  #         cache: true

  #     - run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y ninja-build libgtk-3-dev

  #     - run: flutter --version

  #     - run: flutter pub get
  #     - run: dart run build_runner build

  #     - run: flutter build apk       --no-tree-shake-icons --release
  #     - run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/release_android_universal.apk

  #     - run: flutter build apk       --no-tree-shake-icons --release --target-platform android-arm64 
  #     - run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/release_android_arm64.apk

  #     - run: flutter build appbundle --no-tree-shake-icons --release
  #     - run: mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/flutter-apk/release_android.aab
      
  #     - run: flutter build linux     --no-tree-shake-icons --release
  #     - run: tar -czvf release_linux.tar.gz build/linux/x64/release/bundle

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_apk_universal
  #         path: build/app/outputs/flutter-apk/release_android_universal.apk

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_apk_arm64
  #         path: build/app/outputs/flutter-apk/release_android_arm64.apk

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_app
  #         path: build/app/outputs/flutter-apk/release_android.aab

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_linux
  #         path: release_linux.tar.gz


  # build-windows:
  #   name: Build Flutter Windows app
  #   runs-on: windows-latest
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v4
  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         cache: true

  #     - run: dart run build_runner build
  #     - run: flutter build windows

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_exe
  #         path: build/windows/x64/runner/Release/time_manager_client.exe

  # build-macos:
  #   name: Build Flutter MacOS app
  #   runs-on: macos-latest
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v4
  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         cache: true
          
  #     - run: dart run build_runner build
  #     - run: flutter build macos

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: release_macos
  #         path: build/macos/Build/Products/Release/time_manager_client.app

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [build-linux, build-windows, build-macos]
  #   steps:
  #     - name: Download release_apk_universal
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_apk_universal

  #     - name: Download release_apk_arm64
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_apk_arm64

  #     - name: Download release_app
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_app

  #     - name: Download release_linux
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_linux

  #     - name: Download release_exe
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_exe

  #     - name: Download release_macos
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release_macos
      
  #     - name: Rename files
  #       run: |
  #         ls -la
  #         mv release_android_universal.apk android-universal.apk
  #         mv release_android_arm64.apk     android-arm64.apk
  #         mv release_android.aab           android.aab
  #         mv release_linux.tar.gz          linux.tar.gz
  #         mv time_manager_client.exe       windows.exe
  #         mv time_manager_client.app       macos.app


  #     - name: Release
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         tag_name: ${{ github.ref }}
  #         name: Release ${{ github.ref }}
  #         body: New Pre-Release.
  #         draft: false
  #         prerelease: true
  #         files: |
  #           android-universal-universal.apk
  #           android-arm64-arm64.apk
  #           android.aab.aab
  #           linux.tar.gz
  #           windows.exe
  #           macos.app
            