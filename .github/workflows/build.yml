name: Build Application

on:
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build-on-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - shell: bash
        run: |
          echo -e "DS_KEY=$DS_KEY       \n"  > .env
          echo -e "SUPA_URL=$SUPA_URL   \n" >> .env
          echo -e "SUPA_ANON=$SUPA_ANON"    >> .env

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ninja-build libgtk-3-dev locate rpm patchelf locate p7zip libfuse2
          version: 1.0
          execute_install_scripts: true

      - run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/

      - run: |
          flutter --version
          flutter pub get

      - run: |
          mkdir dist
          dart pub global activate flutter_distributor
          dart run build_runner clean
          dart run build_runner build -d 1 -r
          dart run flutter_launcher_icons

      - run: flutter_distributor package --platform linux --targets deb,rpm,appimage,zip
      - run: flutter build apk --release --split-per-abi --no-tree-shake-icons 
      - run: flutter build apk --release --no-tree-shake-icons 
      - run: flutter build web --no-tree-shake-icons --release

      - run: ls -la dist/*/

      - uses: actions/upload-artifact@v4
        with:
          name: release_linux
          path: dist/*/*.*

      # 发布Github Page
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/web'


  build-on-windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - shell: bash
        run: |
          echo -e "DS_KEY=$DS_KEY       \n"  > .env
          echo -e "SUPA_URL=$SUPA_URL   \n" >> .env
          echo -e "SUPA_ANON=$SUPA_ANON"    >> .env

      - run: |
          mkdir dist
          dart pub global activate flutter_distributor
          dart run build_runner clean
          dart run build_runner build -d 1 -r
          dart run flutter_launcher_icons
                    
      - run: flutter_distributor package --platform windows --targets exe,msix

      - run: ls dist/*/

      - uses: actions/upload-artifact@v4
        with:
          name: release_windows
          path: dist/*/*.*

  build-on-macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - shell: bash
        run: |
          echo -e "DS_KEY=$DS_KEY       \n"  > .env
          echo -e "SUPA_URL=$SUPA_URL   \n" >> .env
          echo -e "SUPA_ANON=$SUPA_ANON"    >> .env

      - run: |
          npm install -g appdmg

      - run: |
          mkdir dist
          dart pub global activate flutter_distributor
          dart run build_runner clean
          dart run build_runner build -d 1 -r
          dart run flutter_launcher_icons
                    
      - run: flutter_distributor package --platform macos --targets dmg,pkg
      - run: flutter_distributor package --platform ios --targets ipa --export-method ad-hoc
      - run: ls -la dist/*/

      - uses: actions/upload-artifact@v4
        with:
          name: release_macos
          path: dist/*/*.*

  deploy-page:
    runs-on: ubuntu-latest
    needs: build-on-linux
    
    permissions:
      contents: read
      pages: write
      id-token: write

    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  pre-release:
    runs-on: ubuntu-latest
    needs: [build-on-linux, build-on-windows, build-on-macos]
    steps:
      - run: echo s